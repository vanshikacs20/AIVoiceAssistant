import speech_recognition as sr
from gtts import gTTS
from playsound import playsound
import tempfile, os

# Listen in Hindi
def listen_hindi():
    r = sr.Recognizer()
    with sr.Microphone() as source:
        print("ЁЯОд рдХреГрдкрдпрд╛ рд╣рд┐рдВрджреА рдореЗрдВ рдЕрдкрдирд╛ рдкреНрд░рд╢реНрди рдкреВрдЫреЗрдВ...")
        r.adjust_for_ambient_noise(source, duration=1)
        audio = r.listen(source)
    try:
        text = r.recognize_google(audio, language="hi-IN")
        print("тЬЕ рдЖрдкрдиреЗ рдХрд╣рд╛:", text)
        return text
    except:
        print("тЭМ рдорд╛рдлрд╝ рдХрд░реЗрдВ, рд╕рдордЭ рдирд╣реАрдВ рдкрд╛рдпрд╛ред")
        return ""

# Speak in Hindi
def speak_hindi(text):
    tmp = tempfile.NamedTemporaryFile(suffix=".mp3", delete=False)
    tmp.close()
    gTTS(text=text, lang="hi").save(tmp.name)
    playsound(tmp.name)
    os.remove(tmp.name)

# Advisory answers
def advisory_answer(question: str) -> str:
    q = question.lower()
    
    # Greetings
    if "рдирдорд╕реНрддреЗ" in q or "рд╣реИрд▓реЛ" in q:
        return "рдирдорд╕реНрддреЗ! рдЖрдкрдХрд╛ рд╕реНрд╡рд╛рдЧрдд рд╣реИред рдЖрдк рдХреИрд╕реЗ рд╣реИрдВ?"
    
    # Crop advisory questions with full-line examples
    elif "рдордХреНрдХрд╛" in q and ("рдХрдм рдмреЛрдирд╛ рдЪрд╛рд╣рд┐рдП" in q or "рд╕рдордп" in q):
        return "рдордХреНрдХрд╛ рдмреЛрдиреЗ рдХрд╛ рд╕рдмрд╕реЗ рдЕрдЪреНрдЫрд╛ рд╕рдордп рдЕрдкреНрд░реИрд▓ рд╕реЗ рдЬреВрди рд╣реИред"
    elif "рдЧреЗрд╣реВрдВ" in q and ("рдХрдм рдмреЛрдирд╛ рдЪрд╛рд╣рд┐рдП" in q or "рд╕рдордп" in q):
        return "рдЧреЗрд╣реВрдВ рдмреЛрдиреЗ рдХрд╛ рд╕рдмрд╕реЗ рдЕрдЪреНрдЫрд╛ рд╕рдордп рдирд╡рдВрдмрд░ рд╣реИред"
    elif "рдЪрд╛рд╡рд▓" in q and ("рдХрдм рдмреЛрдирд╛ рдЪрд╛рд╣рд┐рдП" in q or "рд╕рдордп" in q):
        return "рдЪрд╛рд╡рд▓ рдХреЗ рд▓рд┐рдП рдЬреБрд▓рд╛рдИ рдХрд╛ рдорд╣реАрдирд╛ рд╕рдмрд╕реЗ рдЕрдЪреНрдЫрд╛ рд╣реИред"
    elif "рдЦрд╛рдж" in q and ("рдХреИрд╕реЗ рджреЗрдВ" in q or "рдХрд┐рддрдиреА рдорд╛рддреНрд░рд╛" in q):
        return "рдЦреЗрддреА рдореЗрдВ рд╕рдВрддреБрд▓рд┐рдд рдЦрд╛рдж рдХрд╛ рдкреНрд░рдпреЛрдЧ рдХрд░реЗрдВ тАФ рдпреВрд░рд┐рдпрд╛ рдФрд░ рдбреАрдПрдкреАред"
    elif ("рдкрд╛рдиреА" in q or "рд╕рд┐рдВрдЪрд╛рдИ" in q) and ("рдХрд┐рддрдиреА рдмрд╛рд░" in q or "рдХреИрд╕реЗ рдХрд░реЗрдВ" in q):
        return "рдлрд╕рд▓реЛрдВ рдХреЛ рд╣рдлреНрддреЗ рдореЗрдВ рдХрдо рд╕реЗ рдХрдо 2 рдмрд╛рд░ рдкрд╛рдиреА рджреЗрдВред"
    elif ("рдХреАрдЯ" in q or "рдХреАрдЯ рдирд┐рдпрдВрддреНрд░рдг" in q) and ("рдХреИрд╕реЗ рдХрд░реЗрдВ" in q or "рд░реЛрдХрдерд╛рдо" in q):
        return "рдХреАрдЯреЛрдВ рд╕реЗ рдмрдЪрд╛рд╡ рдХреЗ рд▓рд┐рдП рдЬреИрд╡рд┐рдХ рджрд╡рд╛рдУрдВ рдХрд╛ рдкреНрд░рдпреЛрдЧ рдХрд░реЗрдВред"
    
    # General advice
    elif "рд╕рд▓рд╛рд╣" in q or "рд╕реБрдЭрд╛рд╡" in q:
        return "рдореЗрд░реА рд╕рд▓рд╛рд╣ рд╣реИ рдХрд┐ рдореМрд╕рдо рдХреА рдЬрд╛рдирдХрд╛рд░реА рд▓реЗрдХрд░ рд╣реА рдлрд╕рд▓ рдХрд░реЗрдВ рдФрд░ рд╕реНрд╡рд╛рд╕реНрдереНрдп рдХрд╛ рдзреНрдпрд╛рди рд░рдЦреЗрдВред"
    
    # Gratitude
    elif "рдзрдиреНрдпрд╡рд╛рдж" in q or "рд╢реБрдХреНрд░рд┐рдпрд╛" in q:
        return "рдЖрдкрдХрд╛ рд╕реНрд╡рд╛рдЧрдд рд╣реИ! рдЖрдкрдХрд╛ рджрд┐рди рд╢реБрдн рд╣реЛред"
    
    else:
        return "рдорд╛рдлрд╝ рдХрд░реЗрдВ, рдореЗрд░реЗ рдкрд╛рд╕ рдЗрд╕ рд╕рд╡рд╛рд▓ рдХрд╛ рдЙрддреНрддрд░ рдирд╣реАрдВ рд╣реИред"

# Continuous demo run
if __name__ == "__main__":
    opening_statement = "ЁЯдЦ рдирдорд╕реНрддреЗ! рдореИрдВ рдЖрдкрдХрд╛ рдХреГрд╖рд┐ рд╕рд▓рд╛рд╣рдХрд╛рд░ рд╣реВрдБред рдЖрдк рдореБрдЭрд╕реЗ рдлрд╕рд▓, рдЦрд╛рдж, рдкрд╛рдиреА рдпрд╛ рдХреАрдЯ рдирд┐рдпрдВрддреНрд░рдг рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдкреВрдЫ рд╕рдХрддреЗ рд╣реИрдВред рдмреЛрд▓рдХрд░ 'рдмрдВрдж рдХрд░реЛ' рдХрд╣рдХрд░ рдЗрд╕реЗ рд░реЛрдХ рд╕рдХрддреЗ рд╣реИрдВред"
    
    # Speak the opening statement
    print(opening_statement)
    speak_hindi(opening_statement)
    
    while True:
        question = listen_hindi()
        if question:
            # Stop condition
            if any(word in question.lower() for word in ["рдмрдВрдж рдХрд░реЛ", "exit", "quit"]):
                goodbye = "рдареАрдХ рд╣реИ, рдмрд╛рддрдЪреАрдд рд╕рдорд╛рдкреНрдд рдХрд░ рд░рд╣реЗ рд╣реИрдВред рдЖрдкрдХрд╛ рджрд┐рди рд╢реБрдн рд╣реЛ!"
                print("ЁЯдЦ", goodbye)
                speak_hindi(goodbye)
                break
            
            answer = advisory_answer(question)
            print("ЁЯдЦ рдЙрддреНрддрд░:", answer)
            speak_hindi(answer)
